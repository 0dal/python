'''
Реализовать класс Matrix (матрица). Обеспечить перегрузку
конструктора класса (метод __init__()), который должен принимать
данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
Следующий шаг — реализовать перегрузку метода __str__() для
вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации
операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять
поэлементно — первый элемент первой строки первой
матрицы складываем с первым элементом первой строки
второй матрицы и т.д.
'''


class Matrix:
    def __init__(self, z: list):
        self.z = z

    def __str__(self):
        result = []
        for row in self.z:
            result.append(' '.join([str(k) for k in row]))
        return '\n'.join(result)

    def __add__(self, other):
        result = []
        for i, row in enumerate(self.z):
            new_list = list(map(lambda x, y: x + y, row, other.z[i]))
            result.append(new_list)
        return Matrix(result)


m1 = Matrix([[10, 10, 10], [10, 10, 10], [10, 10, 10]])
m2 = Matrix([[10, 11, 12], [13, 14, 15], [16, 17, 18]])

print(m1, '\n')
print(m2, '\n')
print('Сумма матриц:')
print(m1 + m2)
